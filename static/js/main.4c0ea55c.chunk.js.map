{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Spinner.js","components/Main.js","components/Footer.js","components/ModalWithForm.js","components/ImageModal.js","components/App.js","index.js"],"names":["Header","className","api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_getResponse","cardData","method","body","JSON","stringify","name","placeName","link","placeUrl","cardId","inputsValues","about","inputValue","avatar","authorization","Card","card","onCardClick","src","alt","onClick","likes","id","Spinner","Main","onEditAvatar","onEditProfile","onAddPlace","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","isLoading","setIsLoading","useEffect","getUserInfo","data","catch","err","console","error","all","getInitialCardList","result","items","map","item","_id","length","type","aria-label","Footer","copyright","ModalWithForm","title","children","isOpen","onClose","action","ImageModal","isImgOpen","App","isEditAvatarModalOpen","setIsEditAvatarModalOpen","isEditProfileModalOpen","setIsEditProfileModalOpen","isAddPlaceModalOpen","setIsAddPlaceModalOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","value","disabled","required","minLength","maxLength","autoComplete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c0ea55c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <header className=\"header page__header\">\n    <div className=\"header__logo\" />\n  </header>\n);\n\nexport default Header;\n","class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getInitialCardList() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers,\n    }).then(this._getResponse);\n  }\n\n  saveCard(cardData) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardData.placeName,\n        link: cardData.placeUrl,\n      }),\n    })\n      .then(this._getResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._getResponse);\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n      .then(this._getResponse);\n  }\n\n  dislikeCard(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n      .then(this._getResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers,\n    })\n      .then((res) => this._getResponse(res));\n  }\n\n  saveUserInfo(inputsValues) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputsValues.name,\n        about: inputsValues.about,\n      }),\n    }).then(this._getResponse);\n  }\n\n  changeAvatar(inputValue) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputValue.link,\n      }),\n    }).then(this._getResponse);\n  }\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-16',\n  headers: {\n    authorization: 'c2262ae2-cc7e-47ac-904f-82f5dcb37778',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n","import React from 'react';\n\nconst Card = ({ card, onCardClick }) => {\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  return (\n    <>\n      <li className=\"elements__element\" key={card.id}>\n        <img src={card.link} alt=\"\" className=\"elements__img\" onClick={handleClick} />\n        <div className=\"elements__footer\">\n          <h2 className=\"elements__title\">{card.name}</h2>\n          <div className=\"elements__like-container\">\n            <button className=\"elements__like-btn\" />\n            <p className=\"elements__like-counter\">{card.likes}</p>\n          </div>\n          <button className=\"elements__del-btn\" />\n        </div>\n      </li>\n    </>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\"> </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\nimport Spinner from './Spinner';\n\nconst Main = ({\n  onEditAvatar, onEditProfile, onAddPlace, onCardClick,\n}) => {\n\n  const [userName, setUserName] = useState('');\n  const [userDescription, setUserDescription] = useState('');\n  const [userAvatar, setUserAvatar] = useState('');\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    api.getUserInfo()\n      .then(((data) => {\n        setUserName(data.name);\n        setUserDescription(data.about);\n        setUserAvatar(data.avatar);\n      }))\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    Promise.all([\n      api.getInitialCardList()\n    ])\n        .then((result) => {\n        const cardsData = result[0];\n        const items = cardsData.map((item) => ({\n          id: item._id,\n          name: item.name,\n          link: item.link,\n          likes: item.likes.length,\n        }));\n\n        setIsLoading(false);\n        setCards(items);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  return (\n    <main className=\"page__main\">\n      <section className=\"profile page__profile\">\n        <div className=\"profile__info\">\n          <div onClick={onEditAvatar} className=\"profile__photo-container\">\n            <img className=\"profile__photo\" src={userAvatar} alt=\"Фотография профиля\" />\n          </div>\n          <div className=\"profile__heading\">\n            <h1 className=\"profile__title\">{userName}</h1>\n            <button onClick={onEditProfile} className=\"profile__edit-btn\" type=\"button\" aria-label=\"Edit\" />\n          </div>\n          <p className=\"profile__subtitle\">{userDescription}</p>\n        </div>\n        <button onClick={onAddPlace} className=\"profile__add-btn\" type=\"button\" aria-label=\"Add\" />\n      </section>\n\n      <section className=\"page__elements\">\n        <ul className=\"elements\">\n          {isLoading\n            ? <Spinner />\n            : cards.map((card) => <Card key={card.id} card={card} onCardClick={onCardClick} />)}\n        </ul>\n      </section>\n\n    </main>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\n// eslint-disable-next-line react/prop-types\nconst Footer = ({ copyright }) => (\n  <footer className=\"footer\">\n    <p className=\"footer__copyright\">{copyright}</p>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\n\nconst ModalWithForm = ({\n  name, title, children, isOpen, onClose,\n}) => (\n  <div className={`modal modal_type_${name} ${isOpen ? 'modal_is-open' : ''}`}>\n    <div className=\"modal__container\">\n      <span onClick={onClose} className=\"modal__close-btn\" />\n      <h2 className=\"modal__title\">{title}</h2>\n      <form className=\"modal__form\" name={name} action=\"#\">\n        {children}\n      </form>\n    </div>\n  </div>\n);\n\nexport default ModalWithForm;\n","import React from 'react';\n\nconst ImageModal = ({ card, onClose }) => {\n  return (\n    <div className={`modal modal_type_preview ${card.isImgOpen ? 'modal_is-open' : ''}`}>\n      <div className=\"modal__preview-container\">\n        <span onClick={onClose} className=\"modal__close-btn modal__close-btn_type_preview\" />\n        <img className=\"modal__preview-img\" src={card.link} alt={card.name} />\n        <p className=\"modal__preview-subtitle\">{card.name}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageModal;\n","import React, { useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ModalWithForm from './ModalWithForm';\nimport ImageModal from './ImageModal';\n\nfunction App() {\n  const [isEditAvatarModalOpen, setIsEditAvatarModalOpen] = useState(false);\n  const [isEditProfileModalOpen, setIsEditProfileModalOpen] = useState(false);\n  const [isAddPlaceModalOpen, setIsAddPlaceModalOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({isImgOpen: false});\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarModalOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfileModalOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlaceModalOpen(true);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard({isImgOpen: true, ...card});\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarModalOpen(false);\n    setIsEditProfileModalOpen(false);\n    setIsAddPlaceModalOpen(false);\n    setSelectedCard({ isImgOpen: false});\n  };\n\n  return (\n    <>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header />\n\n          <Main\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n          />\n\n          <Footer copyright=\"© 2020 Mesto Russia. Сергей Компаниец\" />\n\n          <ModalWithForm\n            name=\"edit-avatar\"\n            title=\"Обновить аватар?\"\n            children={(\n              <>\n                <input\n                  type=\"url\"\n                  className=\"modal__input-txt modal__input-txt_type_edit-avatar\"\n                  name=\"link\"\n                  placeholder=\"Ссылка на новое фото\"\n                />\n                <span className=\"modal__input-error\" id=\"link-error\" />\n                <input type=\"submit\" className=\"modal__sbmt-btn\" value=\"Сохранить\" name=\"save\" disabled />\n              </>\n            )}\n            isOpen={isEditAvatarModalOpen}\n            onClose={closeAllPopups}\n          />\n\n          <ModalWithForm\n            name=\"edit-profile\"\n            title=\"Редактировать профиль\"\n            children={(\n              <>\n                <input\n                  type=\"text\"\n                  className=\"modal__input-txt modal__input-txt_type_name\"\n                  name=\"name\"\n                  placeholder=\"Имя\"\n                  required\n                  minLength=\"2\"\n                  maxLength=\"40\"\n                  autoComplete=\"off\"\n                />\n                <span className=\"modal__input-error\" id=\"name-error\" />\n                <input\n                  type=\"text\"\n                  className=\"modal__input-txt modal__input-txt_type_job\"\n                  name=\"about\"\n                  placeholder=\"Ваша профессия?\"\n                  required\n                  minLength=\"2\"\n                  maxLength=\"200\"\n                  autoComplete=\"off\"\n                />\n                <span className=\"modal__input-error\" id=\"about-error\" />\n                <input type=\"submit\" className=\"modal__sbmt-btn\" value=\"Сохранить\" name=\"save\" disabled />\n              </>\n          )}\n            isOpen={isEditProfileModalOpen}\n            onClose={closeAllPopups}\n          />\n\n          <ModalWithForm\n            name=\"add-place\"\n            title=\"Новое место\"\n            children={(\n              <>\n                <input\n                  type=\"text\"\n                  className=\"modal__input-txt modal__input-txt_type_place-name\"\n                  name=\"placeName\"\n                  placeholder=\"Название\"\n                  required\n                  minLength=\"1\"\n                  maxLength=\"30\"\n                />\n                <span className=\"modal__input-error\" id=\"placeName-error\" />\n                <input\n                  type=\"url\"\n                  className=\"modal__input-txt modal__input-txt_type_img-url\"\n                  name=\"placeUrl\"\n                  placeholder=\"Ссылка на картинку\"\n                  required\n                />\n                <span className=\"modal__input-error\" id=\"placeUrl-error\" />\n                <input type=\"submit\" className=\"modal__sbmt-btn\" value=\"Создать\" name=\"save\" />\n              </>\n            )}\n            isOpen={isAddPlaceModalOpen}\n            onClose={closeAllPopups}\n          />\n        </div>\n\n        <ImageModal card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}