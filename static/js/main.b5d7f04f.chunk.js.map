{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Spinner.js","components/Main.js","components/Footer.js","components/ImageModal.js","components/ModalWithForm.js","components/EditProfileModal.js","utils/api.js","components/EditAvatarModal.js","components/AddPlaceModal.js","components/App.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","like","cardLikeButtonClassName","src","link","alt","onClick","name","length","Spinner","Main","onEditAvatar","onEditProfile","onAddPlace","cards","onLoading","avatar","type","aria-label","about","map","Footer","copyright","ImageModal","onClose","isImgOpen","ModalWithForm","title","children","isOpen","onSubmit","action","EditProfileModal","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","value","onChange","target","placeholder","required","minLength","maxLength","autoComplete","id","api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_getResponse","cardData","method","body","JSON","stringify","cardTitle","cardSrc","cardId","dislikeCard","likeCard","inputsValues","inputValue","authorization","EditAvatarModal","onUpdateAvatar","changeAvatar","useRef","current","ref","AddPlaceModal","setCardTitle","setCardSrc","App","isEditAvatarModalOpen","setIsEditAvatarModalOpen","isEditProfileModalOpen","setIsEditProfileModalOpen","isAddPlaceModalOpen","setIsAddPlaceModalOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","isLoading","setIsLoading","all","getInitialCardList","getUserInfo","result","cardsData","userData","items","item","catch","err","console","error","closeAllModals","Provider","log","deleteCard","newCards","filter","changeLikeCardStatus","newCard","avatarData","saveUserInfo","saveCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5d7f04f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <header className=\"header page__header\">\n    <div className=\"header__logo\" />\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import React, { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Card = ({\n  card, onCardClick, onCardLike, onCardDelete,\n}) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  const isOwn = card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (`elements__del-btn ${!isOwn\n    ? 'elements__del-btn_is-hidden'\n    : ''}`);\n\n  const isLiked = card.likes.some((like) => like._id === currentUser._id);\n  const cardLikeButtonClassName = (`elements__like-btn ${isLiked\n    ? 'elements__like-btn_is-active'\n    : ''}`);\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLike() {\n    onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  return (\n    <>\n      <li className=\"elements__element\" key={card._id}>\n        <img src={card.link} alt=\"\" className=\"elements__img\" onClick={handleClick} />\n        <div className=\"elements__footer\">\n          <h2 className=\"elements__title\">{card.name}</h2>\n          <div className=\"elements__like-container\">\n            <button className={cardLikeButtonClassName} onClick={handleLike} />\n            <p className=\"elements__like-counter\">{card.likes.length}</p>\n          </div>\n          <button className={cardDeleteButtonClassName} onClick={handleDeleteClick} />\n        </div>\n      </li>\n    </>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\"> </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useContext } from 'react';\nimport Card from './Card';\nimport Spinner from './Spinner';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Main = ({\n  onEditAvatar, onEditProfile, onAddPlace, onCardClick, cards, onCardLike, onCardDelete, onLoading,\n}) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"page__main\">\n      <section className=\"profile page__profile\">\n        <div className=\"profile__info\">\n          <div onClick={onEditAvatar} className=\"profile__photo-container\">\n            <img className=\"profile__photo\" src={currentUser.avatar} alt=\"Фотография профиля\" />\n          </div>\n          <div className=\"profile__heading\">\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\n            <button onClick={onEditProfile} className=\"profile__edit-btn\" type=\"button\" aria-label=\"Edit\" />\n          </div>\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\n        </div>\n        <button onClick={onAddPlace} className=\"profile__add-btn\" type=\"button\" aria-label=\"Add\" />\n      </section>\n\n      <section className=\"page__elements\">\n        <ul className=\"elements\">\n          {onLoading\n            ? <Spinner />\n            : cards.map((card) => (\n              <Card\n                key={card._id}\n                card={card}\n                onCardClick={onCardClick}\n                onCardLike={onCardLike}\n                onCardDelete={onCardDelete}\n              />\n            ))}\n        </ul>\n      </section>\n\n    </main>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nconst Footer = ({ copyright }) => (\n  <footer className=\"footer\">\n    <p className=\"footer__copyright\">{copyright}</p>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\n\nconst ImageModal = ({ card, onClose }) => {\n  return (\n    <div className={`modal modal_type_preview ${card.isImgOpen ? 'modal_is-open' : ''}`}>\n      <div className=\"modal__preview-container\">\n        <span onClick={onClose} className=\"modal__close-btn modal__close-btn_type_preview\" />\n        <img className=\"modal__preview-img\" src={card.link} alt={card.name} />\n        <p className=\"modal__preview-subtitle\">{card.name}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageModal;\n","import React from 'react';\n\nconst ModalWithForm = ({\n  name, title, children, isOpen, onClose, onSubmit,\n}) => (\n  <div className={`modal modal_type_${name} ${isOpen ? 'modal_is-open' : ''}`}>\n    <div className=\"modal__container\">\n      <span onClick={onClose} className=\"modal__close-btn\" />\n      <h2 className=\"modal__title\">{title}</h2>\n      <form\n        className=\"modal__form\"\n        onSubmit={onSubmit}\n        name={name}\n        action=\"#\"\n      >\n        {children}\n      </form>\n    </div>\n  </div>\n);\n\nexport default ModalWithForm;\n","import React, { useState, useEffect } from 'react';\nimport ModalWithForm from './ModalWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfileModal({ isOpen, onClose, onUpdateUser }) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  const handleChangeName = (evt) => {\n    setName(evt.target.value);\n  };\n\n  const handleChangeDescription = (evt) => {\n    setDescription(evt.target.value);\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  };\n\n  return (\n    <ModalWithForm\n      name=\"edit-profile\"\n      title=\"Редактировать профиль\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      children={(\n        <>\n          <input\n            type=\"text\"\n            className=\"modal__input-txt modal__input-txt_type_name\"\n            value={name || ''}\n            onChange={handleChangeName}\n            name=\"name\"\n            placeholder=\"Имя\"\n            required\n            minLength=\"2\"\n            maxLength=\"40\"\n            autoComplete=\"off\"\n          />\n          <span className=\"modal__input-error\" id=\"name-error\" />\n          <input\n            type=\"text\"\n            className=\"modal__input-txt modal__input-txt_type_job\"\n            value={description || ''}\n            onChange={handleChangeDescription}\n            name=\"about\"\n            placeholder=\"Ваша профессия?\"\n            required\n            minLength=\"2\"\n            maxLength=\"200\"\n            autoComplete=\"off\"\n          />\n          <span className=\"modal__input-error\" id=\"about-error\" />\n          <input type=\"submit\" className=\"modal__sbmt-btn\" value=\"Сохранить\" name=\"save\" />\n        </>\n      )}\n    />\n\n  );\n}\n\nexport default EditProfileModal;\n","class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getInitialCardList() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers,\n    }).then(this._getResponse);\n  }\n\n  saveCard(cardData) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardData.cardTitle,\n        link: cardData.cardSrc,\n      }),\n    })\n      .then(this._getResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._getResponse);\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n      .then(this._getResponse);\n  }\n\n  dislikeCard(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n      .then(this._getResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return isLiked\n      ? this.dislikeCard(cardId)\n      : this.likeCard(cardId)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers,\n    })\n      .then((res) => this._getResponse(res));\n  }\n\n  saveUserInfo(inputsValues) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputsValues.name,\n        about: inputsValues.about,\n      }),\n    }).then(this._getResponse);\n  }\n\n  changeAvatar(inputValue) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputValue.avatar,\n      }),\n    }).then(this._getResponse);\n  }\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-16',\n  headers: {\n    authorization: 'c2262ae2-cc7e-47ac-904f-82f5dcb37778',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n","import React from 'react';\nimport ModalWithForm from './ModalWithForm';\n\nfunction EditAvatarModal({ isOpen, onClose, onUpdateAvatar }) {\n  const changeAvatar = React.useRef('');\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    onUpdateAvatar({\n      avatar: changeAvatar.current.value,\n    });\n  };\n\n  return (\n    <ModalWithForm\n      name=\"edit-avatar\"\n      title=\"Обновить аватар?\"\n      onSubmit={handleSubmit}\n      isOpen={isOpen}\n      onClose={onClose}\n      children={(\n        <>\n          <input\n            ref={changeAvatar}\n            type=\"url\"\n            className=\"modal__input-txt modal__input-txt_type_edit-avatar\"\n            name=\"link\"\n            placeholder=\"Ссылка на новое фото\"\n          />\n          <span className=\"modal__input-error\" id=\"link-error\" />\n          <input type=\"submit\" className=\"modal__sbmt-btn\" value=\"Сохранить\" name=\"save\" />\n        </>\n      )}\n    />\n  );\n}\n\nexport default EditAvatarModal;\n","import React, { useState } from 'react';\nimport ModalWithForm from './ModalWithForm';\n\nfunction AddPlaceModal({ isOpen, onClose, onAddPlace }) {\n  const [cardTitle, setCardTitle] = useState('');\n  const [cardSrc, setCardSrc] = useState('');\n\n  const handleAddTitle = (evt) => {\n    setCardTitle(evt.target.value);\n  };\n\n  const handleAddSrc = (evt) => {\n    setCardSrc(evt.target.value);\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    onAddPlace({ cardTitle, cardSrc });\n  };\n\n  return (\n    <ModalWithForm\n      name=\"add-place\"\n      title=\"Новое место\"\n      onSubmit={handleSubmit}\n      isOpen={isOpen}\n      onClose={onClose}\n      children={(\n        <>\n          <input\n            onChange={handleAddTitle}\n            type=\"text\"\n            value={cardTitle || ''}\n            className=\"modal__input-txt modal__input-txt_type_place-name\"\n            name=\"placeName\"\n            placeholder=\"Название\"\n            required\n            minLength=\"1\"\n            maxLength=\"30\"\n          />\n          <span className=\"modal__input-error\" id=\"placeName-error\" />\n          <input\n            onChange={handleAddSrc}\n            type=\"url\"\n            value={cardSrc || ''}\n            className=\"modal__input-txt modal__input-txt_type_img-url\"\n            name=\"placeUrl\"\n            placeholder=\"Ссылка на картинку\"\n            required\n          />\n          <span className=\"modal__input-error\" id=\"placeUrl-error\" />\n          <input type=\"submit\" className=\"modal__sbmt-btn\" value=\"Создать\" name=\"save\" />\n        </>\n      )}\n    />\n\n  );\n}\n\nexport default AddPlaceModal;\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImageModal from './ImageModal';\nimport EditProfileModal from './EditProfileModal';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditAvatarModal from './EditAvatarModal';\nimport AddPlaceModal from './AddPlaceModal';\n\nfunction App() {\n  const [isEditAvatarModalOpen, setIsEditAvatarModalOpen] = useState(false);\n  const [isEditProfileModalOpen, setIsEditProfileModalOpen] = useState(false);\n  const [isAddPlaceModalOpen, setIsAddPlaceModalOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({ isImgOpen: false });\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    Promise.all([\n      api.getInitialCardList(),\n      api.getUserInfo(),\n    ])\n      .then((result) => {\n        const cardsData = result[0];\n        const userData = result[1];\n\n        const items = cardsData.map((item) => ({\n          _id: item._id,\n          name: item.name,\n          link: item.link,\n          likes: item.likes,\n          owner: item.owner,\n        }));\n\n        setCurrentUser(userData);\n        setCards(items);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarModalOpen(true);\n  };\n\n  const handleUpdateAvatar = (avatarData) => {\n    api.changeAvatar(avatarData)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllModals();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfileModalOpen(true);\n  };\n\n  const handleUpdateUser = (userData) => {\n    api.saveUserInfo(userData)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllModals();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlaceModalOpen(true);\n  };\n\n  const handleAddPlaceSubmit = (newCard) => {\n    api\n      .saveCard(newCard)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllModals();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard({ isImgOpen: true, ...card });\n  };\n\n  function handleCardDelete(card) {\n    console.log(card);\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((item) => item._id !== card._id);\n        setCards(newCards);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((like) => like._id === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((item) => (item._id === card._id ? newCard : item));\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  const closeAllModals = () => {\n    setIsEditAvatarModalOpen(false);\n    setIsEditProfileModalOpen(false);\n    setIsAddPlaceModalOpen(false);\n    setSelectedCard({ isImgOpen: false });\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header />\n\n          <Main\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardDelete={handleCardDelete}\n            onCardLike={handleCardLike}\n            onLoading={isLoading}\n          />\n\n          <Footer copyright=\"© 2020 Mesto Russia. Сергей Компаниец\" />\n\n          <EditAvatarModal\n            isOpen={isEditAvatarModalOpen}\n            onClose={closeAllModals}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          <EditProfileModal\n            isOpen={isEditProfileModalOpen}\n            onClose={closeAllModals}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          <AddPlaceModal\n            isOpen={isAddPlaceModalOpen}\n            onClose={closeAllModals}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n        </div>\n\n        <ImageModal card={selectedCard} onClose={closeAllModals} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}